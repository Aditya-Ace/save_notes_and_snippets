import 'material-icons/iconfont/material-icons.css'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'

export default function Home() {
	const [userCode, setUserCode] = useState('')
	const [themeToggle, setThemeToggle] = useState(false)
	const [textType, setTextType] = useState('')

	const toggleTheme = () => {
		setThemeToggle(!themeToggle)
	}

	const handleSelectChange = (e) => {
		localStorage.setItem('textType', e.target.value)
		setTextType(e.target.value)
	}

	const handleSaveUserInput = (e) => {
		console.log(e.target.value)
	}

	useEffect(() => {
		const themeState = localStorage.getItem('theme')
		if (themeState) setThemeToggle(true)
	}, [])

	useEffect(() => {
		if (themeToggle) {
			document.body.classList.add('dark')
			document.getElementById('title').classList.add('dark')
			document.getElementById('addTextCode').classList.add('dark')
			document.getElementById('textType').classList.add('dark')
			localStorage.setItem('theme', 'dark')
		} else {
			document.body.classList.remove('dark')
			document.getElementById('title').classList.remove('dark')
			document.getElementById('addTextCode').classList.remove('dark')
			document.getElementById('textType').classList.remove('dark')
			localStorage.removeItem('theme')
		}
	}, [themeToggle])

	return (
		<div className={styles.container}>
			<Head>
				<title>Save Text Code Snippets</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main className={styles.main}>
				<h1 className={styles.title} id='title'>
					Save Text Code Snippets
				</h1>
				<section className={styles.toolKit_wrapper}>
					<span
						className={
							themeToggle
								? 'material-icons-outlined themeIcon'
								: 'material-icons themeIcon'
						}
						onClick={toggleTheme}
					>
						dark_mode
					</span>
					<select id='textType' onChange={handleSelectChange}>
						<option value='text'>Text</option>
						<option value='code'>Code</option>
					</select>
				</section>
				<textarea
					name='addTextCode'
					id='addTextCode'
					cols='60'
					rows='10'
					placeholder='Enter your code or text here'
					onChange={(e) => setUserCode(e.target.value)}
					value-={userCode}
					className={styles.textarea}
					autoComplete='off'
					autoCorrect='on'
					onBlur={handleSaveUserInput}
				></textarea>
			</main>
		</div>
	)
}
